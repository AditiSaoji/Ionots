{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91705\\\\Desktop\\\\Ionots EdTech\\\\client\\\\src\\\\components\\\\ProgressTracking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressTracking = ({\n  candidateId\n}) => {\n  _s();\n  const [progress, setProgress] = useState(null);\n  const [taskName, setTaskName] = useState('');\n  const [score, setScore] = useState('');\n\n  // Fetch candidate's progress data from the backend\n  useEffect(() => {\n    const fetchProgress = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/progress/${candidateId}`);\n        setProgress(response.data);\n      } catch (error) {\n        console.error('Error fetching progress data:', error);\n      }\n    };\n    fetchProgress();\n  }, [candidateId]);\n\n  // Handle task completion and score update\n  const handleTaskCompletion = async () => {\n    try {\n      const response = await axios.post(`http://localhost:5000/api/progress/${candidateId}/task`, {\n        taskName,\n        score: parseInt(score)\n      });\n      setProgress(response.data);\n      setTaskName('');\n      setScore('');\n    } catch (error) {\n      console.error('Error updating task completion:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Progress Tracking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), progress ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Score: \", progress.totalScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: progress.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [task.taskName, \" - \", task.isCompleted ? 'Completed' : 'Not Completed', \" - Score: \", task.score]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Update Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Task Name\",\n          value: taskName,\n          onChange: e => setTaskName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Score\",\n          value: score,\n          onChange: e => setScore(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTaskCompletion,\n          children: \"Complete Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading progress...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgressTracking, \"3ry+RcjSnILXJoLlfPprSBnDckw=\");\n_c = ProgressTracking;\nexport default ProgressTracking;\nvar _c;\n$RefreshReg$(_c, \"ProgressTracking\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ProgressTracking","candidateId","_s","progress","setProgress","taskName","setTaskName","score","setScore","fetchProgress","response","get","data","error","console","handleTaskCompletion","post","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","totalScore","tasks","map","task","index","isCompleted","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91705/Desktop/Ionots EdTech/client/src/components/ProgressTracking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ProgressTracking = ({ candidateId }) => {\r\n  const [progress, setProgress] = useState(null);\r\n  const [taskName, setTaskName] = useState('');\r\n  const [score, setScore] = useState('');\r\n\r\n  // Fetch candidate's progress data from the backend\r\n  useEffect(() => {\r\n    const fetchProgress = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/progress/${candidateId}`);\r\n        setProgress(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching progress data:', error);\r\n      }\r\n    };\r\n    fetchProgress();\r\n  }, [candidateId]);\r\n\r\n  // Handle task completion and score update\r\n  const handleTaskCompletion = async () => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000/api/progress/${candidateId}/task`, {\r\n        taskName,\r\n        score: parseInt(score),\r\n      });\r\n      setProgress(response.data);\r\n      setTaskName('');\r\n      setScore('');\r\n    } catch (error) {\r\n      console.error('Error updating task completion:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Progress Tracking</h1>\r\n      {progress ? (\r\n        <div>\r\n          <h2>Total Score: {progress.totalScore}</h2>\r\n          <ul>\r\n            {progress.tasks.map((task, index) => (\r\n              <li key={index}>\r\n                {task.taskName} - {task.isCompleted ? 'Completed' : 'Not Completed'} - Score: {task.score}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <div>\r\n            <h3>Update Task</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Task Name\"\r\n              value={taskName}\r\n              onChange={(e) => setTaskName(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Score\"\r\n              value={score}\r\n              onChange={(e) => setScore(e.target.value)}\r\n            />\r\n            <button onClick={handleTaskCompletion}>Complete Task</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>Loading progress...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressTracking;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}